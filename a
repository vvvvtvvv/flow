<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" number="9325" docName="draft-ietf-uta-rfc7525bis-11" category="bcp" consensus="true" submissionType="IETF" obsoletes="7525" updates="5288, 6066" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.14.0 -->
  <front>
    <title abbrev="TLS/DTLS Recommendations">Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
    <seriesInfo name="RFC" value="9325"/>
    <seriesInfo name="BCP" value="195"/>
    <author initials="Y." surname="Sheffer" fullname="Yaron Sheffer">
      <organization>Intuit</organization>
      <address>
        <email>yaronf.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="P." surname="Saint-Andre" fullname="Peter Saint-Andre">
      <organization>Independent</organization>
      <address>
        <email>stpeter@stpeter.im</email>
      </address>
    </author>
    <author initials="T." surname="Fossati" fullname="Thomas Fossati">
      <organization>ARM Limited</organization>
      <address>
        <email>thomas.fossati@arm.com</email>
      </address>
    </author>
    <date year="2022" month="November"/>
    <area>Applications</area>
    <workgroup>UTA</workgroup>

<!-- [rfced] Please insert any keywords (beyond those that appear in
the title) for use on https://www.rfc-editor.org/search. -->

    <abstract>
      <t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are used to protect data exchanged over a wide range of application protocols and can also form the basis for secure transport protocols.  Over the years, the industry has witnessed several serious attacks on TLS and DTLS, including attacks on the most commonly used cipher suites and their modes of operation.  This document provides the latest recommendations for ensuring the security of deployed services that use TLS and DTLS. These recommendations are applicable to the majority of use cases.</t>
      <t>RFC 7525, an earlier version of the TLS recommendations, was published when the industry was transitioning to TLS 1.2. Years later, this transition is largely complete, and TLS 1.3 is widely available. This document updates the guidance given the new environment and obsoletes RFC 7525. In addition, this document updates RFCs 5288 and 6066 in view of recent attacks.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) are used to protect data exchanged over a wide variety of application protocols, including HTTP <xref target="RFC9112"/> <xref target="RFC9113"/>, IMAP <xref target="RFC9051"/>, Post Office Protocol (POP) <xref target="STD53"/>, SIP <xref target="RFC3261"/>, SMTP <xref target="RFC5321"/>, and the Extensible Messaging and Presence Protocol (XMPP) <xref target="RFC6120"/>.  Such protocols use both the TLS or DTLS handshake protocol and the TLS or DTLS record layer.

<!-- [rfced] FYI: We've replaced hyphens in the following paragraph with parentheses to add clarity to the sentence. Please let us know if this is not preferred.

Original:
   Although the TLS handshake protocol can also be used with different 
   record layers to define secure transport protocols - the most prominent
   example is QUIC [RFC9000] - such transport protocols are not directly in scope
   for this document; nevertheless, many of the recommendations here might apply
   insofar as such protocols use the TLS handshake protocol.

Updated:
   Although the TLS handshake protocol can also be used with different
   record layers to define secure transport protocols (the most prominent example
   is QUIC [RFC9000]), such transport protocols are not directly in scope for
   this document; nevertheless, many of the recommendations here might apply
   insofar as such protocols use the TLS handshake protocol.
-->

      Although the TLS handshake protocol can also be used with different record layers to define secure transport protocols (the most prominent example is QUIC <xref target="RFC9000"/>), such transport protocols are not directly in scope for this document; nevertheless, many of the recommendations here might apply insofar as such protocols use the TLS handshake protocol.</t>

      <t>Over the years leading to 2015, the industry had witnessed serious attacks on TLS and DTLS, including attacks on the most commonly used cipher suites and their modes of operation.  For instance, both the AES-CBC <xref target="RFC3602"/> and RC4 <xref target="RFC7465"/> encryption algorithms, which together were once the most widely deployed ciphers, were attacked in the context of TLS.  Detailed information about the attacks known prior to 2015 is provided in a companion document <xref target="RFC7457"/> to the previous version of the TLS recommendations <xref target="RFC7525"/>, which will help the reader understand the rationale behind the recommendations provided here. That document has not been updated in concert with this one; instead, newer attacks are described in this document, as are mitigations for those attacks.</t>
      <t>The TLS community reacted to the attacks described in <xref target="RFC7457"/> in several ways:</t>
      <ul spacing="normal">
        <li>Detailed guidance was published on the use of TLS 1.2 <xref target="RFC5246"/> and DTLS 1.2 <xref target="RFC6347"/> along with earlier protocol versions. This guidance is included in the original <xref target="RFC7525"/> and mostly retained in this revised version; note that this guidance was mostly adopted by the industry since the publication of RFC 7525 in 2015.</li>
        <li>Versions of TLS earlier than 1.2 were deprecated <xref target="RFC8996"/>.</li>
        <li>Version 1.3 of TLS <xref target="RFC8446"/> was released, followed by version 1.3 of DTLS <xref target="RFC9147"/>; these versions largely mitigate or resolve the described attacks.</li>
      </ul>
      <t>Those who implement and deploy TLS and TLS-based protocols need guidance on how they can be used securely.  This document provides guidance for deployed services as well as for software implementations, assuming the implementer expects their code to be deployed in the environments defined in <xref target="applicability"/>. Concerning deployment, this document targets a wide audience, namely all deployers who wish to add authentication (be it one-way only or mutual), confidentiality, and data integrity protection to their communications.</t>
      <t>The recommendations herein take into consideration the security of various mechanisms, their technical maturity and interoperability, and their prevalence in implementations at the time of writing.  Unless it is explicitly called out that a recommendation applies to TLS alone or to DTLS alone, each recommendation applies to both TLS and DTLS.</t>
      <t>This document attempts to minimize new guidance to TLS 1.2 implementations, and the overall approach is to encourage systems to move to TLS 1.3. However, this is not always practical. Newly discovered attacks, as well as ecosystem changes, necessitated some new requirements that apply to TLS 1.2 environments. Those are summarized in <xref target="diff-rfc"/>.</t>
      <t>Naturally, future attacks are likely, and this document cannot address them.  Those who implement and deploy TLS/DTLS and protocols based on TLS/DTLS are strongly advised to pay attention to future developments.  In particular, although it is known that the creation of quantum computers will have a significant impact on the security of cryptographic primitives and the technologies that use them, currently post-quantum cryptography is a work in progress and it is too early to make recommendations; once the relevant specifications are standardized in the IETF or elsewhere, this document should be updated to reflect best practices at that time.</t>
      <t>As noted, the TLS 1.3 specification resolves many of the vulnerabilities listed in this document. A system that deploys TLS 1.3 should have fewer vulnerabilities than TLS 1.2 or below. Therefore, this document replaces <xref target="RFC7525"/>, with an explicit goal to encourage migration of most uses of TLS 1.2 to TLS 1.3.</t>
      <t>These are minimum recommendations for the use of TLS in the vast majority of implementation and deployment scenarios, with the exception of unauthenticated TLS (see <xref target="applicability"/>). Other specifications that reference this document can have stricter requirements related to one or more aspects of the protocol, based on their particular circumstances (e.g., for use with a specific application protocol); when that is the case, implementers are advised to adhere to those stricter requirements. Furthermore, this document provides a floor, not a ceiling: where feasible, administrators of services are encouraged to go beyond the minimum support available in implementations to provide the strongest security possible. For example, based on knowledge about the deployed base for an existing application protocol and a cost-benefit analysis regarding security strength vs. interoperability, a given service provider might decide to disable TLS 1.2 entirely and offer only TLS 1.3.</t>
      <t>Community knowledge about the strength of various algorithms and feasible attacks can change quickly, and experience shows that a Best Current Practice (BCP) document about security is a point-in-time statement.  Readers are advised to seek out any errata or updates that apply to this document.</t>
      <t>This document updates <xref target="RFC5288"/> in view of the <xref target="Boeck2016"/> attack. See <xref target="nonce-reuse"/> for the details.</t>
      <t>This document updates <xref target="RFC6066"/> in view of the <xref target="ALPACA"/> attack.  See <xref target="sni"/> for the details.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>A number of security-related terms in this document are used in the sense defined in <xref target="RFC4949"/>,
including "attack", "authentication", "certificate", "cipher", "compromise", "confidentiality", 
"credential", "data integrity", "encryption", "forward secrecy", "key", "key length", "self-signed certificate", 
"strength", and "strong".</t>


<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>",
"<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>",
"<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>",
"<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be
interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref
target="RFC8174"/> when, and only when, they appear in all capitals, as shown
here.</t>
    </section>
    <section anchor="rec">
      <name>General Recommendations</name>
      <t>This section provides general recommendations on the secure use of TLS. Recommendations related to cipher suites are discussed in the following section.</t>
      <section anchor="protocol-versions">
        <name>Protocol Versions</name>
        <section anchor="rec-versions">
          <name>SSL/TLS Protocol Versions</name>
          <t>It is important both to stop using old, less secure versions of SSL/TLS and to start using modern, more secure versions; therefore, the following are the recommendations concerning TLS/SSL protocol versions:</t>
          <ul spacing="normal">
            <li>
              <t>Implementations <bcp14>MUST NOT</bcp14> negotiate SSL version 2.  </t>
              <t>
Rationale: Today, SSLv2 is considered insecure <xref target="RFC6176"/>.</t>
            </li>
            <li>
              <t>Implementations <bcp14>MUST NOT</bcp14> negotiate SSL version 3.  </t>
              <t>
Rationale: SSLv3 <xref target="RFC6101"/> was an improvement over SSLv2 and plugged some significant security holes but did not support strong cipher suites. SSLv3 does not support TLS extensions, some of which (e.g., renegotiation_info <xref target="RFC5746"/>) are security critical.  In addition, with the emergence of the Padding Oracle On Downgraded Legacy Encryption (POODLE) attack <xref target="POODLE"/>, SSLv3 is now widely recognized as fundamentally insecure.  See <xref target="RFC7568"/> for further details.</t>
            </li>
	    
            <li>
              <t>Implementations <bcp14>MUST NOT</bcp14> negotiate TLS version 1.0 <xref target="RFC2246"/>.  </t>
              <t>
Rationale: TLS 1.0 (published in 1999) does not support many modern, strong cipher suites. In addition, TLS 1.0 lacks a per-record Initialization Vector (IV) for cipher suites based on cipher block chaining (CBC) and does not warn against common padding errors. This and other recommendations in this section are in line with <xref target="RFC8996"/>.</t>
            </li>
            <li>
              <t>Implementations <bcp14>MUST NOT</bcp14> negotiate TLS version 1.1 <xref target="RFC4346"/>.  </t>
              <t>
Rationale: TLS 1.1 (published in 2006) is a security improvement over TLS 1.0 but still does not support certain stronger cipher suites that were introduced with the standardization of TLS 1.2 in 2008, including the cipher suites recommended for TLS 1.2 by this document (see <xref target="rec-cipher"/> below).</t>
            </li>
            <li>
              <t>Implementations <bcp14>MUST</bcp14> support TLS 1.2 <xref target="RFC5246"/>.  </t>
              <t>
Rationale: TLS 1.2 is implemented and deployed more widely than TLS 1.3 at this time, and when the recommendations in this document are followed to mitigate known attacks, the use of TLS 1.2 is as safe as the use of TLS 1.3.  In most application protocols that reuse TLS and DTLS, there is no immediate need to migrate solely to TLS 1.3. Indeed, because many application clients are dependent on TLS libraries or operating systems that do not yet support TLS 1.3, proactively deprecating TLS 1.2 would introduce significant interoperability issues, thus harming security more than helping it.  Nevertheless, it is expected that a future version of this BCP will deprecate the use of TLS 1.2 when it is appropriate to do so.</t>
            </li>
            <li>
              <t>Implementations <bcp14>SHOULD</bcp14> support TLS 1.3 <xref target="RFC8446"/> and, if implemented, <bcp14>MUST</bcp14> prefer to negotiate TLS 1.3 over earlier versions of TLS.  </t>
              <t>
Rationale: TLS 1.3 is a major overhaul to the protocol and resolves many of the security issues with TLS 1.2. To the extent that an implementation supports TLS 1.2 (even if it defaults to TLS 1.3), it <bcp14>MUST</bcp14> follow the recommendations regarding TLS 1.2 specified in this document.</t>
            </li>
            <li>
              <t>New transport protocols that integrate the TLS/DTLS handshake protocol and/or record layer <bcp14>MUST</bcp14> use only TLS/DTLS 1.3 (for instance, QUIC <xref target="RFC9001"/> took this approach). New application protocols that employ TLS/DTLS for channel or session encryption <bcp14>MUST</bcp14> integrate with both TLS/DTLS versions 1.2 and 1.3; nevertheless, in rare cases where broad interoperability is not a concern, application protocol designers <bcp14>MAY</bcp14> choose to forego TLS 1.2.  </t>
              <t>
Rationale: Secure deployment of TLS 1.3 is significantly easier and less error prone than secure deployment of TLS 1.2. When designing a new secure transport protocol such as QUIC, there is no reason to support TLS 1.2. By contrast, new application protocols that reuse TLS need to support both TLS 1.3 and TLS 1.2 in order to take advantage of underlying library or operating system support for both versions.</t>
            </li>
          </ul>
          <t>This BCP applies to TLS 1.3, TLS 1.2, and earlier versions. It is not safe for readers to assume that the recommendations in this BCP apply to any future version of TLS.</t>
        </section>
        <section anchor="dtls-protocol-versions">
          <name>DTLS Protocol Versions</name>

          <t>DTLS, an adaptation of TLS for UDP datagrams, was introduced when TLS 1.1 was published.  The following are the recommendations with respect to DTLS:</t>
          <ul spacing="normal">
            <li>
              <t>Implementations <bcp14>MUST NOT</bcp14> negotiate DTLS version 1.0 <xref target="RFC4347"/>.  </t>
              <t>
Version 1.0 of DTLS correlates to version 1.1 of TLS (see above).</t>
            </li>
            <li>
              <t>Implementations <bcp14>MUST</bcp14> support DTLS 1.2 <xref target="RFC6347"/>.  </t>
              <t>
Version 1.2 of DTLS correlates to version 1.2 of TLS (see above).
(There is no version 1.1 of DTLS.)</t>
            </li>
            <li>
              <t>Implementations <bcp14>SHOULD</bcp14> support DTLS 1.3 <xref target="RFC9147"/> and, if implemented, <bcp14>MUST</bcp14> prefer to negotiate DTLS version 1.3 over earlier versions of DTLS.  </t>
              <t>
Version 1.3 of DTLS correlates to version 1.3 of TLS (see above).</t>
            </li>
          </ul>
        </section>
        <section anchor="rec-fallback">
          <name>Fallback to Lower Versions</name>
          <t>TLS/DTLS 1.2 clients <bcp14>MUST NOT</bcp14> fall back to earlier TLS versions, since those versions have been deprecated <xref target="RFC8996"/>. As a result, the downgrade-protection Signaling Cipher Suite Value (SCSV) mechanism <xref target="RFC7507"/> is no longer needed for clients. In addition, TLS 1.3 implements a new version-negotiation mechanism.</t>
        </section>
      </section>
      <section anchor="strict-tls">
        <name>Strict TLS</name>
        <t>The following recommendations are provided to help prevent "SSL Stripping" and STARTTLS command injection (attacks that are summarized in <xref target="RFC7457"/>):</t>
        <ul spacing="normal">
          <li>Many existing application protocols were designed before the use of TLS became common. These protocols typically support TLS in one of two ways: either via a separate port for TLS-only communication (e.g., port 443 for HTTPS) or via a method for dynamically upgrading a channel from unencrypted to TLS protected (e.g., STARTTLS, which is used in protocols such as IMAP and XMPP). Regardless of the mechanism for protecting the communication channel (TLS-only port or dynamic upgrade), what matters is the end state of the channel. When a protocol defines both a dynamic upgrade method and a separate TLS-only method, then the separate TLS-only method <bcp14>MUST</bcp14> be supported by implementations and <bcp14>MUST</bcp14> be configured by administrators to be used in preference to the dynamic upgrade method.  When a protocol supports only a dynamic upgrade method, implementations <bcp14>MUST</bcp14> provide a way for administrators to set a strict local policy that forbids use of plaintext in the absence of a negotiated TLS channel, and administrators <bcp14>MUST</bcp14> use this policy.</li>
          <li>HTTP client and server implementations intended for use in the World Wide Web (see 
<xref target="applicability"/>) <bcp14>MUST</bcp14> support the HTTP Strict Transport Security (HSTS) header 
field <xref target="RFC6797"/> so that web servers can advertise that they are willing to 
accept TLS-only clients. Web servers <bcp14>SHOULD</bcp14> use HSTS to indicate that they are 
willing to accept TLS-only clients, unless they are deployed in such a way that 
using HSTS would in fact weaken overall security (e.g., it can be problematic to 
use HSTS with self-signed certificates, as described in <xref section="11.3" sectionFormat="of" target="RFC6797"/>).
Similar technologies exist for non-HTTP application protocols, such as Mail Transfer Agent Strict Transport Security (MTA-STS) for 
mail transfer agents <xref target="RFC8461"/> and methods based on DNS-Based Authentication of 
Named Entities (DANE) <xref target="RFC6698"/> for SMTP <xref target="RFC7672"/> and XMPP <xref target="RFC7712"/>.</li>
        </ul>
        <t>Rationale: Combining unprotected and TLS-protected communication opens the way to SSL Stripping and similar attacks, since an initial part of the communication is not integrity protected and therefore can be manipulated by an attacker whose goal is to keep the communication in the clear.</t>
      </section>


      <section anchor="compression">
        <name>Compression</name>
        <t anchor="rec-compress">In order to help prevent compression-related attacks (summarized in <xref section="2.6" sectionFormat="of" target="RFC7457"/>) when using TLS 1.2, implementations and deployments <bcp14>SHOULD NOT</bcp14> support
TLS-level compression (<xref section="6.2.2" sectionFormat="of" target="RFC5246"/>); the only exception is when
the application protocol in question has been proven not to be open to such attacks.
However, even in this case, extreme caution is warranted because of the potential for
	future attacks related to TLS compression. More specifically, the HTTP protocol is known to be vulnerable to compression-related attacks. (This recommendation applies to TLS 1.2 only, because compression has been removed from TLS 1.3.)</t>

<t>Rationale: TLS compression has been subject to security attacks such as the Compression Ratio Info-leak Made Easy (CRIME) attack.</t>
        <t>Implementers should note that compression at higher protocol levels can allow an active attacker to extract cleartext information from the connection. The Browser Reconnaissance and Exfiltration via Adaptive Compression of Hypertext (BREACH) attack is one such case. These issues can only be mitigated outside of TLS and are thus outside the scope of this document. See <xref section="2.6" sectionFormat="of" target="RFC7457"/> for further details.</t>
        <section anchor="certificate-compression">
          <name>Certificate Compression</name>
          <t>Certificate chains often take up most of the bytes transmitted during
the handshake.  In order to manage their size, some or all of the following
methods can be employed (see also <xref section="4" sectionFormat="of" target="RFC9191"/> for further suggestions):</t>
          <ul spacing="normal">
            <li>Limit the number of names or extensions.</li>
            <li>Use keys with small public key representations, like the Elliptic Curve Digital Signature Algorithm (ECDSA).</li>
            <li>Use certificate compression.</li>
          </ul>
	  
          <t>To achieve the latter, TLS 1.3 defines the <tt>compress_certificate</tt> extension in
<xref target="RFC8879"/>.  See also <xref section="5" sectionFormat="of" target="RFC8879"/> for security and privacy
considerations associated with its use.  For the avoidance of doubt, CRIME-style attacks on TLS
compression do not apply to certificate compression.</t>
          <t>Due to the strong likelihood of middlebox interference,
compression in the style of <xref target="RFC8879"/> has not been made available in
TLS 1.2.  In theory, the <tt>cached_info</tt> extension defined in <xref target="RFC7924"/> could
be used, but it is not supported widely enough to be considered a practical
alternative.</t>
        </section>
      </section>
      <section anchor="rec-resume">
        <name>TLS Session Resumption</name>
        <t>Session resumption drastically reduces the number of full TLS handshakes and thus is an essential
performance feature for most deployments.</t>
        <t>Stateless session resumption with session tickets is a popular strategy. For TLS 1.2, it is specified in
<xref target="RFC5077"/>.  For TLS 1.3, a more secure mechanism based on the use of a pre-shared key (PSK) is described in
<xref section="4.6.1" sectionFormat="of" target="RFC8446"/>. See <xref target="Springall16"/> for a quantitative study of the risks induced by TLS cryptographic "shortcuts", including session resumption.</t>
        <t>When it is used, the resumption information <bcp14>MUST</bcp14>
be authenticated and encrypted to prevent modification or eavesdropping by an attacker.
Further recommendations apply to session tickets:</t>
        <ul spacing="normal">
          <li>A strong cipher <bcp14>MUST</bcp14> be used when encrypting the ticket (at least as strong as the main TLS cipher suite).</li>
          <li>Ticket-encryption keys <bcp14>MUST</bcp14> be changed regularly, e.g., once every week, so as not to negate the benefits of forward secrecy (see <xref target="sec-pfs"/> for details on forward secrecy). Old ticket-encryption keys <bcp14>MUST</bcp14> be destroyed at the end of the validity period.</li>
          <li>For similar reasons, session ticket validity <bcp14>MUST</bcp14> be limited to a reasonable duration (e.g., half as long as ticket-encryption key validity).</li>
          <li>TLS 1.2 does not roll the session key forward within a single session. Thus, to prevent an attack where the server's ticket-encryption key is stolen and used to decrypt the entire content of a session (negating the concept of forward secrecy), a TLS 1.2 server <bcp14>SHOULD NOT</bcp14> resume sessions that are too old, e.g., sessions that have been open longer than two ticket-encryption key rotation periods.</li>
        </ul>
        <t>Rationale: Session resumption is another kind of TLS handshake and therefore must be as secure as the initial handshake. This document (<xref target="detail"/>) recommends the use of cipher suites that provide forward secrecy, i.e., that prevent an attacker who gains momentary access to the TLS endpoint (either client or server) and its secrets from reading either past or future communication. The tickets must be managed so as not to negate this security property.</t>
        <t>TLS 1.3 provides the powerful option of forward secrecy even within a long-lived connection
that is periodically resumed. <xref section="2.2" sectionFormat="of" target="RFC8446"/> recommends that clients <bcp14>SHOULD</bcp14>
send a "key_share" when initiating session resumption.
In order to gain forward secrecy, this document recommends that server implementations <bcp14>SHOULD</bcp14>
select the "psk_dhe_ke" PSK key exchange mode and 
respond with a "key_share" to complete an Ephemeral Elliptic Curve Diffie-Hellman (ECDHE) exchange on each session resumption.
As a more performant alternative, server implementations <bcp14>MAY</bcp14> refrain from responding with a 
"key_share" until a certain amount of time (e.g., measured in hours) has passed since the last 
ECDHE exchange; this implies that the "key_share" operation would not occur for the presumed
majority of session resumption requests (which would occur within a few hours) while still ensuring 
forward secrecy for longer-lived sessions.</t>
        <t>TLS session resumption introduces potential privacy issues where the server is able
to track the client, in some cases indefinitely. See <xref target="Sy2018"/> for more details.</t>
      </section>
      <section anchor="renegotiation-in-tls-12">
        <name>Renegotiation in TLS 1.2</name>
        <t>The recommendations in this section apply to TLS 1.2 only, because renegotiation has been removed from TLS 1.3.</t>
        <t>Renegotiation in TLS 1.2 is a handshake that establishes new cryptographic parameters for an existing session. The mechanism existed in TLS 1.2 and in earlier protocol versions and was improved following several major attacks including a plaintext injection attack, CVE-2009-3555 <xref target="CVE"/>.</t>
        <t>TLS 1.2 clients and servers <bcp14>MUST</bcp14> implement the <tt>renegotiation_info</tt> extension, as defined in <xref target="RFC5746"/>.</t>
        <t>TLS 1.2 clients <bcp14>MUST</bcp14> send <tt>renegotiation_info</tt> in the Client Hello.  If the server does not acknowledge the extension, the client <bcp14>MUST</bcp14> generate a fatal <tt>handshake_failure</tt> alert prior to terminating the connection.</t>
        <t>Rationale: It is not safe for a client to connect to a TLS 1.2 server that does not support <tt>renegotiation_info</tt> regardless of whether either endpoint actually implements renegotiation.  See also <xref section="4.1" sectionFormat="of" target="RFC5746"/>.</t>
        <t>A related attack resulting from TLS session parameters not being properly authenticated is a Triple Handshake <xref target="Triple-Handshake"/>. To address this attack, TLS 1.2 implementations <bcp14>MUST</bcp14> support the <tt>extended_master_secret</tt> extension defined in <xref target="RFC7627"/>.</t>
      </section>

      <section anchor="post-handshake-authentication">
        <name>Post-Handshake Authentication</name>
        <t>Renegotiation in TLS 1.2 was (partially) replaced in TLS 1.3 by separate post-handshake authentication and key update mechanisms.  In the context of protocols that multiplex requests over a single connection (such as HTTP/2 <xref target="RFC9113"/>), post-handshake authentication has the same problems as TLS 1.2 renegotiation. Multiplexed protocols <bcp14>SHOULD</bcp14> follow the advice provided for HTTP/2 in <xref section="9.2.3" sectionFormat="of" target="RFC9113"/>.</t>
      </section>
     
      <section anchor="sni">
        <name>Server Name Indication (SNI)</name>
        <t>TLS implementations <bcp14>MUST</bcp14> support the Server Name Indication (SNI) extension defined in <xref section="3" sectionFormat="of" target="RFC6066"/> for those higher-level protocols that would benefit from it, including HTTPS. However, the actual use of SNI in particular circumstances is a matter of local policy.  At the time of writing, a technology for encrypting the SNI (called Encrypted Client Hello) is being worked on in the TLS Working Group <xref target="I-D.ietf-tls-esni"/>.  Once that method has been standardized and widely implemented, it will likely be appropriate to recommend its usage in a future version of this BCP.</t>
        <t>Rationale: SNI supports deployment of multiple TLS-protected virtual servers on a single
      address, and therefore enables fine-grained security for these virtual servers,
      by allowing each one to have its own certificate. However, SNI also leaks the 
      target domain for a given connection; this information leak will be closed by 
      use of TLS Encrypted Client Hello once that method has been standardized.</t>
        <t>In order to prevent the attacks described in <xref target="ALPACA"/>, a server that does not
recognize the presented server name <bcp14>SHOULD NOT</bcp14> continue the handshake and
instead <bcp14>SHOULD</bcp14> fail with a fatal-level <tt>unrecognized_name(112)</tt> alert.  Note that this
recommendation updates <xref section="3" sectionFormat="of" target="RFC6066"/>, which stated:</t>


<blockquote>If the server understood the
ClientHello extension but does not recognize the server name, the server <bcp14>SHOULD</bcp14>
take one of two actions: either abort the handshake by sending a fatal-level
<tt>unrecognized_name(112)</tt> alert or continue the handshake.</blockquote>


<t> 
Clients <bcp14>SHOULD</bcp14> abort the handshake if the server acknowledges the SNI extension but presents a certificate with a different hostname than the one sent by the client.</t>
      </section>
      <section anchor="rec-alpn">
        <name>Application-Layer Protocol Negotiation (ALPN)</name>
        <t>TLS implementations (both client- and server-side) <bcp14>MUST</bcp14> support the
Application-Layer Protocol Negotiation (ALPN) extension <xref target="RFC7301"/>.</t>
        <t>In order to prevent "cross-protocol" attacks resulting from failure to ensure
that a message intended for use in one protocol cannot be mistaken for a
message for use in another protocol, servers are advised to strictly enforce the
behavior prescribed in <xref section="3.2" sectionFormat="of" target="RFC7301"/>:
</t>

<blockquote> In the event that the
server supports no protocols that the client advertises, then the server <bcp14>SHALL</bcp14>
respond with a fatal '<tt>no_application_protocol</tt>' alert.</blockquote>

<t>
Clients <bcp14>SHOULD</bcp14>
abort the handshake if the server acknowledges the ALPN extension
but does not select a protocol from the client list.  Failure to do so can
result in attacks such those described in <xref target="ALPACA"/>.</t>
        <t>Protocol developers are strongly encouraged to register an ALPN identifier 
for their protocols. This applies both to new protocols and to well-established 
protocols; however, because the latter might have a large deployed base,
strict enforcement of ALPN usage may not be feasible when an ALPN 
identifier is registered for a well-established protocol.</t>
      </section>
      <section anchor="multi-server-deployment">
        <name>Multi-Server Deployment</name>
        <t>Deployments that involve multiple servers or services can increase the size of the attack surface for TLS. Two scenarios are of interest:</t>
        <ol spacing="normal" type="1"><li>Deployments in which multiple services handle the same domain name via different 
protocols (e.g., HTTP and IMAP). In this case, an attacker might be able to direct 
a connecting endpoint to the service offering a different protocol and mount a 
cross-protocol attack. In a cross-protocol attack, the client and server believe 
they are using different protocols, which the attacker might exploit if messages 
sent in one protocol are interpreted as messages in the other protocol with 
undesirable effects (see <xref target="ALPACA"/> for more detailed information about this class 
of attacks). To mitigate this threat, service providers <bcp14>SHOULD</bcp14> deploy ALPN (see
<xref target="rec-alpn"/>). In addition, to the extent possible, they <bcp14>SHOULD</bcp14> ensure that multiple 
services handling the same domain name provide equivalent levels of security that are consistent with the recommendations in this document; such measures <bcp14>SHOULD</bcp14> include the handling of configurations across multiple TLS servers and protections against compromise of credentials held by those servers.</li>
          <li>Deployments in which multiple servers providing the same service have different
TLS configurations. In this case, an attacker might be able to direct a connecting 
endpoint to a server with a TLS configuration that is more easily exploitable (see 
<xref target="DROWN"/> for more detailed information about this class of attacks). To mitigate 
this threat, service providers <bcp14>SHOULD</bcp14> ensure that all servers providing the same 
service provide equivalent levels of security that are consistent with the 
recommendations in this document.</li>
        </ol>
      </section>
      <section anchor="zero-round-trip-time-0-rtt-data-in-tls-13">
        <name>Zero Round-Trip Time (0-RTT) Data in TLS 1.3</name>
        <t>The 0-RTT early data feature is new in TLS 1.3. It provides reduced latency
when TLS connections are resumed, at the potential cost of certain security properties.
As a result, it requires special attention from implementers on both
the server and the client side. Typically, this extends to the
TLS library as well as protocol layers above it.</t>
        <t>For HTTP over TLS, refer to <xref target="RFC8470"/> for guidance.</t>
        <t>For QUIC on TLS, refer to <xref section="9.2" sectionFormat="of" target="RFC9001"/>.</t>

        <t>For other protocols, generic guidance is given in Section <xref target="RFC8446" section="8" sectionFormat="bare"/> and Appendix <xref target="RFC8446" section="E.5" sectionFormat="bare"/> of <xref target="RFC8446"/>.
To paraphrase Appendix <xref target="RFC8446" sectionFormat="bare" section="E.5"/>, applications <bcp14>MUST</bcp14> avoid this feature unless
an explicit specification exists for the application protocol in question to clarify
when 0-RTT is appropriate and secure. This can take the form of an IETF RFC,
a non-IETF standard, or documentation associated with a non-standard protocol.</t>
      </section>
    </section>
    <section anchor="detail">
      <name>Recommendations: Cipher Suites</name>
      <t>TLS 1.2 provided considerable flexibility in the selection of cipher suites. Unfortunately, the security of some of these cipher suites has degraded over time to the point where some are known to be insecure (this is one reason why TLS 1.3 restricted such flexibility). Incorrectly configuring a server leads to no or reduced security.  This section includes recommendations on the selection and negotiation of cipher suites.</t>

      <section anchor="rec-cipher-guidelines">
        <name>General Guidelines</name>
        <t>Cryptographic algorithms weaken over time as cryptanalysis improves: algorithms that were once considered strong become weak. Consequently, cipher suites using weak algorithms need to be phased out and replaced with more secure cipher suites. This helps to ensure that the desired security properties still hold. SSL/TLS has been in existence for well over 20 years and many of the cipher suites that have been recommended in various versions of SSL/TLS are now considered weak or at least not as strong as desired. Therefore, this section modernizes the recommendations concerning cipher suite selection.</t>
        <ul spacing="normal">
          <li>
            <t>Implementations <bcp14>MUST NOT</bcp14> negotiate the cipher suites with NULL encryption.  </t>
            <t>
Rationale: The NULL cipher suites do not encrypt traffic and 
             so provide no confidentiality services. Any entity in the 
             network with access to the connection can view the plaintext 
             of contents being exchanged by the client and server. Nevertheless, this document does not discourage software from
             implementing NULL cipher suites, since they can be useful for 
             testing and debugging.</t>
          </li>
          <li>
            <t>Implementations <bcp14>MUST NOT</bcp14> negotiate RC4 cipher suites.  </t>
            <t>
Rationale: The RC4 stream cipher has a variety of cryptographic 
             weaknesses, as documented in <xref target="RFC7465"/>.
     Note that DTLS specifically forbids the use of RC4 already.</t>
          </li>
          <li>
            <t>Implementations <bcp14>MUST NOT</bcp14> negotiate cipher suites offering less 
             than 112 bits of security, including so-called "export-level" 
             encryption (which provides 40 or 56 bits of security).  </t>
            <t>
Rationale: Based on <xref target="RFC3766"/>, at least 112 bits 
             of security is needed.  40-bit and 56-bit security (found in 
             so-called "export ciphers") are considered 
             insecure today.</t>
          </li>
          <li>
            <t>Implementations <bcp14>SHOULD NOT</bcp14> negotiate cipher suites that use 
             algorithms offering less than 128 bits of security.  </t>
            <t>
Rationale: Cipher suites that offer 112 or more bits but less than 128 bits
             of security are not considered weak at this time; however, it is 
             expected that their useful lifespan is short enough to justify 
             supporting stronger cipher suites at this time.  128-bit ciphers 
             are expected to remain secure for at least several years and 
             256-bit ciphers until the next fundamental technology 
             breakthrough.  Note that, because of so-called 
             "meet-in-the-middle" attacks <xref target="Multiple-Encryption"/>,
             some legacy cipher suites (e.g., 168-bit Triple DES (3DES)) have an effective 
             key length that is smaller than their nominal key length (112 
             bits in the case of 3DES).  Such cipher suites should be 
             evaluated according to their effective key length.</t>
          </li>
          <li>
            <t>Implementations <bcp14>SHOULD NOT</bcp14> negotiate cipher suites based on 
             RSA key transport, a.k.a. "static RSA".  </t>
            <t>
Rationale: These cipher suites, which have assigned values starting 
             with the string "TLS_RSA_WITH_*", have several drawbacks, especially
             the fact that they do not support forward secrecy.</t>
          </li>
          <li>
            <t>Implementations <bcp14>SHOULD NOT</bcp14> negotiate cipher suites based on
             non-ephemeral (static) finite-field Diffie-Hellman (DH) key agreement. Similarly, implementations <bcp14>SHOULD NOT</bcp14> negotiate non-ephemeral Elliptic Curve DH key agreement.  </t>
            <t>
Rationale: The former cipher suites, which have assigned values prefixed by "TLS_DH_*", have several drawbacks, especially
             the fact that they do not support forward secrecy. The latter ("TLS_ECDH_*") also lack forward secrecy and are subject to invalid curve attacks <xref target="Jager2015"/>.</t>
          </li>
          <li>
            <t>Implementations <bcp14>MUST</bcp14> support and prefer to negotiate cipher suites 
             offering forward secrecy.  However, TLS 1.2 implementations <bcp14>SHOULD NOT</bcp14> negotiate
             cipher suites based on ephemeral finite-field Diffie-Hellman key
             agreement (i.e., "TLS_DHE_*" suites).  This is justified by the known fragility
             of the construction (see <xref target="RACCOON"/>) and the limitation around
             negotiation, including using <xref target="RFC7919"/>, which has seen very
             limited uptake.  </t>
            <t>
Rationale: Forward secrecy (sometimes called "perfect forward 
             secrecy") prevents the recovery of information that was encrypted 
             with older session keys, thus limiting how far back in time data
             can be decrypted when an attack is successful.  See Sections <xref target="sec-pfs" format="counter"/>
             and <xref target="sec-dhe" format="counter"/> for a detailed discussion.</t>
          </li>
        </ul>
      </section>

      <section anchor="rec-cipher">
        <name>Cipher Suites for TLS 1.2</name>
        <t>Given the foregoing considerations, implementation and deployment of the following cipher suites is <bcp14>RECOMMENDED</bcp14>:</t>
        <ul spacing="normal">
          <li>TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</li>
          <li>TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</li>
          <li>TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</li>
          <li>TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</li>
        </ul>
        <t>As these are Authenticated Encryption with Associated Data (AEAD) algorithms <xref target="RFC5116"/>, these cipher suites are supported only in TLS 1.2 and not in earlier protocol versions.</t>
        <t>Typically, to prefer these suites, the order of suites needs to be explicitly configured in server software.  It would be ideal if server software implementations were to prefer these suites by default.</t>
        <t>Some devices have hardware support for AES Counter Mode with CBC-MAC (AES-CCM) but not AES Galois/Counter Mode (AES-GCM), so they are unable to follow the foregoing recommendations regarding cipher suites.  There are even devices that do not support public key cryptography at all, but these are out of scope entirely.</t>
        <t>A cipher suite that operates in CBC (cipher block chaining) mode (e.g.,
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256) <bcp14>SHOULD NOT</bcp14> be used unless the
<tt>encrypt_then_mac</tt> extension <xref target="RFC7366"/> is also successfully negotiated.
This requirement applies to both client and server implementations.</t>
        <t>When using ECDSA signatures for authentication of TLS peers, it is <bcp14>RECOMMENDED</bcp14> that implementations use the NIST curve P-256. In addition, to avoid predictable or repeated nonces (which could reveal the long-term signing key), it is <bcp14>RECOMMENDED</bcp14> that implementations implement "deterministic ECDSA" as specified in <xref target="RFC6979"/> and in line with the recommendations in <xref target="RFC8446"/>.</t>
        <t>Note that implementations of "deterministic ECDSA" may be vulnerable to certain
side-channel and fault injection attacks precisely because of their
determinism.  While most fault injection attacks described in the literature assume
physical access to the device (and therefore are more relevant in Internet of Things (IoT)
deployments with poor or non-existent physical security), some can be carried
out remotely <xref target="Poddebniak2017"/>, e.g., as Rowhammer <xref target="Kim2014"/> variants.  In
deployments where side-channel attacks and fault injection attacks are a
concern, implementation strategies combining both randomness and determinism
(for example, as described in <xref target="I-D.mattsson-cfrg-det-sigs-with-noise"/>) can
be used to avoid the risk of successful extraction of the signing key.</t>
        <section anchor="detail-neg">
          <name>Implementation Details</name>
          <t>Clients <bcp14>SHOULD</bcp14> include TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 as the first proposal to any server.  Servers <bcp14>MUST</bcp14> prefer this cipher suite over weaker cipher suites whenever it is proposed, even if it is not the first proposal.  Clients are of course free to offer stronger cipher suites, e.g., using AES-256; when they do, the server <bcp14>SHOULD</bcp14> prefer the stronger cipher suite unless there are compelling reasons (e.g., seriously degraded performance) to choose otherwise.</t>
          <t>The previous version of the TLS recommendations <xref target="RFC7525"/> implicitly allowed the old RFC 5246 mandatory-to-implement cipher suite, TLS_RSA_WITH_AES_128_CBC_SHA. At the time of writing, this cipher suite does not provide additional interoperability, except with very old clients. As with other cipher suites that do not provide forward secrecy, implementations <bcp14>SHOULD NOT</bcp14> support this cipher suite. Other application protocols specify other cipher suites as mandatory to implement (MTI).</t>
          <t><xref target="RFC8422"/> allows clients and servers to negotiate ECDH parameters (curves). Both clients and servers <bcp14>SHOULD</bcp14> include the "Supported Elliptic Curves Extension" <xref target="RFC8422"/>.  Clients and servers <bcp14>SHOULD</bcp14> support the NIST P&nbhy;256 (secp256r1) <xref target="RFC8422"/> and X25519 (x25519) <xref target="RFC7748"/> curves.  Note that <xref target="RFC8422"/> deprecates all but the uncompressed point format.  Therefore, if the client sends an <tt>ec_point_formats</tt> extension, the ECPointFormatList <bcp14>MUST</bcp14> contain a single element, "uncompressed".</t>
        </section>
      </section>
      <section anchor="cipher-suites-for-tls-13">
        <name>Cipher Suites for TLS 1.3</name>
        <t>This document does not specify any cipher suites for TLS 1.3. Readers
are referred to <xref section="9.1" sectionFormat="of" target="RFC8446"/> for cipher suite recommendations.</t>
      </section>

      <section anchor="limits-on-key-usage">
        <name>Limits on Key Usage</name>
        <t>All ciphers have an upper limit on the amount of traffic that can be securely
protected with any given key. In the case of AEAD cipher suites, two separate
limits are maintained for each key:</t>
        <ol spacing="normal" type="1"><li>Confidentiality limit (CL), i.e., the number of records that can be
encrypted.</li>
          <li>Integrity limit (IL), i.e., the number of records that are allowed to fail
authentication.</li>
        </ol>
        <t>The latter applies to DTLS (and also to QUIC) but not to TLS itself, since TLS connections are torn down on the
first decryption failure.</t>
        <t>When a sender is approaching CL, the implementation <bcp14>SHOULD</bcp14> initiate a new handshake (in TLS 1.3, this can be achieved by sending a KeyUpdate message on the established session) to rotate the session key. When a receiver has reached IL, the implementation <bcp14>SHOULD</bcp14> close the connection. Although these recommendations are a best practice, implementers need to be aware that it is not always easy to accomplish them in protocols that are built on top of TLS/DTLS without introducing coordination across layer boundaries.  See <xref section="6" sectionFormat="of" target="RFC9001"/> for an example of the cooperation that was necessary in QUIC between the crypto and transport layers to support key updates.  Note that in general, application protocols might not be able to emulate that method given their more constrained interaction with TLS/DTLS. As a result of these complexities, these recommendations are not mandatory.</t>
        <t>For all TLS 1.3 cipher suites, readers are referred to <xref section="5.5" sectionFormat="of" target="RFC8446"/> for the values of CL and IL. For all DTLS 1.3 cipher suites, readers are referred to <xref section="4.5.3" sectionFormat="of" target="RFC9147"/>.</t>
        <t>For all AES-GCM cipher suites recommended for TLS 1.2 and DTLS 1.2 in this
document, CL can be derived by plugging the corresponding parameters into the
inequalities in <xref section="6.1" sectionFormat="of" target="I-D.irtf-cfrg-aead-limits"/> that apply to
random, partially implicit nonces, i.e., the nonce construction used in TLS
1.2.  Although the obtained figures are slightly higher than those for TLS 1.3,
it is <bcp14>RECOMMENDED</bcp14> that the same limit of 2<sup>24.5</sup> records is used for
both versions.</t>
        <t>For all AES-GCM cipher suites recommended for DTLS 1.2, IL (obtained from the
same inequalities referenced above) is 2<sup>28</sup>.</t>
      </section>
      <section anchor="rec-keylength">
        <name>Public Key Length</name>
        <t>When using the cipher suites recommended in this document, two public keys are 
      normally used in the TLS handshake: one for the Diffie-Hellman key agreement
      and one for server authentication. Where a client certificate is used, a third 
      public key is added.</t>

      <t>With a key exchange based on modular exponential (MODP) Diffie-Hellman groups ("DHE" cipher suites), DH key lengths of at least 2048 bits are <bcp14>REQUIRED</bcp14>.</t>
        <t>Rationale: For various reasons, in practice, DH keys are typically generated in lengths
 that are powers of two (e.g., 2<sup>10</sup> = 1024 bits, 2<sup>11</sup> = 2048 bits, 2<sup>12</sup> = 4096 bits).
 Because a DH key of 1228 bits would be roughly equivalent to only an 80-bit symmetric key
<xref target="RFC3766"/>, it is better to use keys longer than that for the "DHE" family of cipher suites.
A DH key of 1926 bits would be roughly equivalent to a 100-bit symmetric key <xref target="RFC3766"/>.
A DH key of 2048 bits (equivalent to a 112-bit symmetric key) 
is the minimum allowed by the latest revision of <xref target="NIST.SP.800-56A"/> as of this writing
(see in particular  Appendix D of that document).</t>
        <t>As noted in <xref target="RFC3766"/>, correcting for the emergence of The Weizmann Institute Relation Locator (TWIRL) machine <xref target="TWIRL"/> would imply that 1024-bit DH keys yield about 61 bits of equivalent strength and that a 2048-bit DH key would yield about 92 bits of equivalent strength.
The Logjam attack <xref target="Logjam"/> further demonstrates that 1024-bit Diffie-Hellman parameters
should be avoided.</t>
        <t>With regard to ECDH keys, implementers are referred to the IANA "TLS Supported Groups" registry (formerly known as the "EC Named Curve
Registry") within the
   "Transport Layer Security (TLS) Parameters" registry <xref target="IANA_TLS"/> and in particular to the "recommended"
   groups.  Curves of less than 224 bits <bcp14>MUST NOT</bcp14> be used. This recommendation is in line with the latest
revision of <xref target="NIST.SP.800-56A"/>.</t>
<t>When using RSA, servers <bcp14>MUST</bcp14> authenticate using certificates with at least a 2048-bit modulus for the public key. In addition, the use of the SHA-256 hash algorithm is <bcp14>RECOMMENDED</bcp14> and SHA-1 or MD5 <bcp14>MUST NOT</bcp14> be used <xref target="RFC9155"/> (for more details, see also <xref target="CAB-Baseline"/>, for which the current version at the time of writing is 1.8.4). Clients <bcp14>MUST</bcp14> indicate to servers that they request SHA-256 by using the "Signature Algorithms" extension defined in TLS 1.2. For TLS 1.3, the same requirement is already specified by <xref target="RFC8446"/>.</t>
        <t><cref anchor="live-ref-question">Note to RFC Editor: we are looking for advice on how to best handle this constantly updated guidance from the CA/Browser Forum.  In particular: which URL to use, which (if any) version to reference</cref></t>
      </section>
      <section anchor="truncated-hmac">
        <name>Truncated HMAC</name>	
        <t>Implementations <bcp14>MUST NOT</bcp14> use the Truncated HMAC Extension, defined in <xref section="7" sectionFormat="of" target="RFC6066"/>.</t>
        <t>Rationale: The extension does not apply to the AEAD
      cipher suites recommended above. However, it does apply to most other TLS cipher suites. Its use
      has been shown to be insecure in <xref target="PatersonRS11"/>.</t>
      </section>
    </section>
    <section anchor="applicability">
      <name>Applicability Statement</name>
      <t>The recommendations of this document primarily apply to the implementation and deployment of application protocols that are most commonly used with TLS and DTLS on the Internet today.  Examples include, but are not limited to:</t>
      <ul spacing="normal">
        <li>Web software and services that wish to protect HTTP traffic with TLS.</li>
        <li>Email software and services that wish to protect IMAP, Post Office Protocol version 3 (POP3), or SMTP traffic with TLS.</li>
        <li>Instant-messaging software and services that wish to protect Extensible Messaging and Presence Protocol (XMPP) or Internet Relay Chat (IRC) traffic with TLS.</li>
        <li>Realtime media software and services that wish to protect Secure Realtime Transport Protocol (SRTP) traffic with DTLS.</li>
      </ul>
      <t>This document does not modify the implementation and deployment recommendations (e.g., mandatory-to-implement cipher suites) prescribed by existing application protocols that employ TLS or DTLS. If the community that uses such an application protocol wishes to modernize its usage of TLS or DTLS to be consistent with the best practices recommended here, it needs to explicitly update the existing application protocol definition (one example is <xref target="RFC7590"/>, which updates <xref target="RFC6120"/>).</t>
      <t>Designers of new application protocols developed through the Internet
  Standards Process <xref target="RFC2026"/> are expected at minimum to conform to the best
  practices recommended here, unless they provide documentation of
  compelling reasons that would prevent such conformance (e.g.,
  widespread deployment on constrained devices that lack support for
  the necessary algorithms).</t>
      <t>Although many of the recommendations provided here might also apply to QUIC insofar 
that it uses the TLS 1.3 handshake protocol, QUIC and other such secure transport protocols 
are out of scope of this document. For QUIC specifically, readers are 
referred to <xref section="9.2" sectionFormat="of" target="RFC9001"/>.</t>
      <t>This document does not address the use of TLS in constrained-node networks
<xref target="RFC7228"/>.  For recommendations regarding the profiling of TLS and DTLS for
small devices with severe constraints on power, memory, and processing
resources, the reader is referred to <xref target="RFC7925"/> and
<xref target="I-D.ietf-uta-tls13-iot-profile"/>.</t>
      <section anchor="security-services">
        <name>Security Services</name>
        <t>This document provides recommendations for an audience that wishes to secure their communication with TLS to achieve the following:</t>

	<dl>

 <dt>Confidentiality:
</dt>
<dd>all application-layer communication is encrypted with the goal   
that no party should be able to decrypt it except the intended receiver.
</dd>

 <dt>Data integrity:
</dt>
<dd>any changes made to the communication in transit are detectable   
by the receiver.
</dd>

 <dt>Authentication:
</dt>
<dd>an endpoint of the TLS communication is authenticated as the      
intended entity to communicate with.
</dd>

</dl>



<t>With regard to authentication, TLS enables authentication of one or both endpoints in the communication.  In the context of opportunistic security <xref target="RFC7435"/>, TLS is sometimes used without authentication. As discussed in <xref target="oppsec"/>, considerations for opportunistic security are not in scope for this document.</t>
        <t>If deployers deviate from the recommendations given in this document, they need to be aware that they might lose access to one of the foregoing security services.</t>
        <t>This document applies only to environments where confidentiality is required. It requires algorithms and configuration options that enforce secrecy of the data in transit.</t>
        <t>This document also assumes that data integrity protection is always one of the goals of a deployment. In cases where integrity is not required, it does not make sense to employ TLS in the first place. There are attacks against confidentiality-only protection that utilize the lack of integrity to also break confidentiality (see, for instance, <xref target="DegabrieleP07"/> in the context of IPsec).</t>
        <t>This document addresses itself to application protocols that are most commonly used on the Internet with TLS and DTLS. Typically, all communication between TLS clients and TLS servers requires all three of the above security services. This is particularly true where TLS clients are user agents like web browsers or email clients.</t>
        <t>This document does not address the rarer deployment scenarios where one of the above three properties is not desired, such as the use case described in <xref target="oppsec"/>.  As another scenario where confidentiality is not needed, consider a monitored network where the authorities in charge of the respective traffic domain require full access to unencrypted (plaintext) traffic and where users collaborate and send their traffic in the clear.</t>
      </section>
      <section anchor="oppsec">
        <name>Opportunistic Security</name>
        <t>There are several important scenarios in which the use of TLS is optional, i.e., the client decides dynamically ("opportunistically") whether to use TLS with a particular server or to connect in the clear.  This practice, often called "opportunistic security", is described at length in <xref target="RFC7435"/> and is often motivated by a desire for backward compatibility with legacy deployments.</t>
        <t>In these scenarios, some of the recommendations in this document might be too strict, since adhering to them could cause fallback to cleartext, a worse outcome than using TLS with an outdated protocol version or cipher suite.</t>
      </section>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>This document has no IANA actions.</t>
    </section>


    <section anchor="sec">
      <name>Security Considerations</name>
      <t>This entire document discusses the security practices directly affecting applications
    using the TLS protocol. This section contains broader security considerations related
    to technologies used in conjunction with or by TLS.
    The reader is referred to the Security Considerations sections of TLS 1.3
    <xref target="RFC8446"/>, DTLS 1.3 <xref target="RFC9147"/>, TLS 1.2 <xref target="RFC5246"/>, and DTLS 1.2 <xref target="RFC6347"/>
    for further context.</t>
      <section anchor="host-name-validation">
        <name>Host Name Validation</name>
        <t>Application authors should take note that some TLS implementations
  do not validate host names.  If the TLS implementation they are
  using does not validate host names, authors might need to write their
  own validation code or consider using a different TLS implementation.</t>
  <t>It is noted that the requirements regarding host name validation (and, in general, binding between the TLS layer and the protocol that runs above it) vary between different protocols. For HTTPS, these requirements are defined by Sections



  <xref target="RFC9110"  section="4.3.3" sectionFormat="bare" />, <xref target="RFC9110"        
sectionFormat="bare" section="4.3.4" />, and <xref target="RFC9110"        
sectionFormat="bare" section="4.3.5" /> of <xref target="RFC9110"/>.</t>
        <t>Host name validation is security-critical for all common TLS use cases. Without it, TLS ensures that the certificate is valid and guarantees possession of the private key but does not ensure that the connection terminates at the desired endpoint. Readers are referred to <xref target="RFC6125"/> for further details regarding generic host name validation in the TLS context. In addition, that RFC contains a long list of application protocols, some of which implement a policy very different from HTTPS.</t>
        <t>If the host name is discovered indirectly and insecurely (e.g., by a cleartext DNS query for an SRV or Mail Exchange (MX) record), it <bcp14>SHOULD NOT</bcp14> be used as a reference identifier <xref target="RFC6125"/> even when it matches the presented certificate.  This proviso does not apply if the host name is discovered securely (for further discussion, see <xref target="RFC7673"/> and <xref target="RFC7672"/>).</t>
        <t>Host name validation typically applies only to the leaf "end entity" certificate. Naturally, in order to ensure proper authentication in the context of the PKI, application clients need to verify the entire certification path in accordance with <xref target="RFC5280"/>.</t>
      </section>
      <section anchor="sec-aes">
        <name>AES-GCM</name>
        <t><xref target="rec-cipher"/> recommends the use of the AES-GCM authenticated encryption algorithm. Please refer to <xref section="6" sectionFormat="of" target="RFC5288"/> for security considerations that apply specifically to AES-GCM when used with TLS.</t>
        <section anchor="nonce-reuse">
          <name> Nonce Reuse in TLS 1.2</name>
          <t>The existence of deployed TLS stacks that mistakenly reuse the AES-GCM nonce is
documented in <xref target="Boeck2016"/>, showing there is an actual risk of AES-GCM getting
implemented insecurely and thus making TLS sessions that use an
AES-GCM cipher suite vulnerable to attacks such as <xref target="Joux2006"/>.  (See <xref target="CVE"/>
records: CVE-2016-0270, CVE-2016-10213, CVE-2016-10212, and CVE-2017-5933.)</t>
          <t>While this problem has been fixed in TLS 1.3, which enforces a deterministic
method to generate nonces from record sequence numbers and shared secrets for
all its AEAD cipher suites (including AES-GCM), TLS 1.2 implementations
could still choose their own (potentially insecure) nonce generation methods.</t>
          <t>It is therefore <bcp14>RECOMMENDED</bcp14> that TLS 1.2 implementations use the 64-bit
sequence number to populate the <tt>nonce_explicit</tt> part of the GCM nonce, as
described in the first two paragraphs of <xref section="5.3" sectionFormat="of" target="RFC8446"/>. This stronger recommendation updates <xref section="3" sectionFormat="of" target="RFC5288"/>, which specifies that the use of 64-bit sequence numbers to populate the <tt>nonce_explicit</tt> field is optional.</t>
          <t>We note that at the time of writing, there are no cipher suites defined for nonce-reuse-resistant algorithms such as AES-GCM-SIV <xref target="RFC8452"/>.</t>
        </section>
      </section>
      <section anchor="sec-pfs">
        <name>Forward Secrecy</name>
        <t>Forward secrecy (also called "perfect forward secrecy" or "PFS" and defined in <xref target="RFC4949"/>) is a defense against an attacker who records encrypted conversations where the session keys are only encrypted with the communicating parties' long-term keys.</t>
        <t>Should the attacker be able to obtain these long-term keys at some point later in time, the session keys and thus the entire conversation could be decrypted.</t>
        <t>In the context of TLS and DTLS, such compromise of long-term keys is not entirely implausible. It can happen, for example, due to:</t>
        <ul spacing="normal">
          <li>A client or server being attacked by some other attack vector, and the private key retrieved.</li>
          <li>A long-term key retrieved from a device that has been sold or otherwise decommissioned without prior wiping.</li>
          <li>A long-term key used on a device as a default key <xref target="Heninger2012"/>.</li>
          <li>A key generated by a trusted third party like a CA and later retrieved from it by either extortion or compromise <xref target="Soghoian2011"/>.</li>
          <li>A cryptographic breakthrough or the use of asymmetric keys with insufficient length <xref target="Kleinjung2010"/>.</li>
          <li>Social engineering attacks against system administrators.</li>
          <li>Collection of private keys from inadequately protected backups.</li>
        </ul>
        <t>Forward secrecy ensures in such cases that it is not feasible for an attacker to determine the session keys even if the attacker has obtained the long-term keys some time after the conversation. It also protects against an attacker who is in possession of the long-term keys but remains passive during the conversation.</t>
        <t>Forward secrecy is generally achieved by using the Diffie-Hellman scheme to derive session keys. The Diffie-Hellman scheme has both parties maintain private secrets and send parameters over the network as modular powers over certain cyclic groups. The properties of the so-called Discrete Logarithm Problem (DLP) allow the parties to derive the session keys without an eavesdropper being able to do so. There is currently no known attack against DLP if sufficiently large parameters are chosen. A variant of the Diffie-Hellman scheme uses elliptic curves instead of the originally proposed modular arithmetic. Given the current state of the art, Elliptic Curve Diffie-Hellman appears to be more efficient, permits shorter key lengths, and allows less freedom for implementation errors than finite-field Diffie-Hellman.</t>
        <t>Unfortunately, many TLS/DTLS cipher suites were defined that do not feature forward secrecy, e.g., TLS_RSA_WITH_AES_256_CBC_SHA256.  This document therefore advocates strict use of forward-secrecy-only ciphers.</t>
      </section>
      <section anchor="sec-dhe">
        <name>Diffie-Hellman Exponent Reuse</name>
        <t>For performance reasons, it is not uncommon for TLS implementations to reuse Diffie-Hellman and Elliptic Curve Diffie-Hellman exponents across multiple connections. Such reuse can result in major security issues:</t>
        <ul spacing="normal">
          <li>If exponents are reused for too long (in some cases, even as little as a few hours), an attacker who gains access to the host can decrypt previous connections. In other words, exponent reuse negates the effects of forward secrecy.</li>
          <li>TLS implementations that reuse exponents should test the DH public key they receive for group membership, in order to avoid some known attacks. These tests are not standardized in TLS at the time of writing, although general guidance in this area is provided by <xref target="NIST.SP.800-56A"/> and available in many protocol implementations.</li>
          <li>Under certain conditions, the use of static finite-field DH keys, or of ephemeral finite-field DH keys that are reused across multiple connections, can lead to timing attacks (such as those described in <xref target="RACCOON"/>) on the shared secrets used in Diffie-Hellman key exchange.</li>
          <li>An "invalid curve" attack can be mounted against Elliptic Curve DH if the victim does not verify that the received point lies on the correct curve.  If the victim is reusing the DH secrets, the attacker can repeat the probe varying the points to recover the full secret (see <xref target="Antipa2003"/> and <xref target="Jager2015"/>).</li>
        </ul>
        <t>To address these concerns:</t>
        <ul spacing="normal">
          <li>TLS implementations <bcp14>SHOULD NOT</bcp14> use static finite-field DH keys and <bcp14>SHOULD NOT</bcp14> reuse ephemeral finite-field DH keys across multiple connections.</li>
          <li>Server implementations that want to reuse Elliptic Curve DH keys <bcp14>SHOULD</bcp14> either use a "safe curve" <xref target="SAFECURVES"/> (e.g., X25519) or perform the checks described in <xref target="NIST.SP.800-56A"/> on the received points.</li>
        </ul>
      </section>
      <section anchor="certificate-revocation">
        <name>Certificate Revocation</name>
        <t>The following considerations and recommendations represent the current state of the art regarding certificate revocation, even though no complete and efficient solution exists for the problem of checking the revocation status of common public key certificates <xref target="RFC5280"/>:</t>
        <ul spacing="normal">
          <li>Certificate revocation is an important tool when recovering from attacks on the TLS implementation as well as cases of misissued certificates. TLS implementations <bcp14>MUST</bcp14> implement a strategy to distrust revoked certificates.</li>
          <li>Although Certificate Revocation Lists (CRLs) are the most widely supported mechanism for distributing revocation information, they have known scaling challenges that limit their usefulness, despite workarounds such as partitioned CRLs and delta CRLs. The more modern <xref target="CRLite"/> and the follow-on Let's Revoke <xref target="LetsRevoke"/> build on the availability of Certificate Transparency <xref target="RFC9162"/> logs and aggressive compression to allow practical use of the CRL infrastructure, but at the time of writing, neither solution is deployed for client-side revocation processing at scale.</li>
          <li>Proprietary mechanisms that embed revocation lists in the web browser's configuration database cannot scale beyond the few most heavily used web servers.</li>
          <li>The Online Certification Status Protocol (OCSP) <xref target="RFC6960"/> in its basic form presents both scaling and privacy issues. In addition, clients typically "soft-fail", meaning that they do not abort the TLS connection if the OCSP server does not respond. (However, this might be a workaround to avoid denial-of-service attacks if an OCSP responder is taken offline.) For a recent survey of the status of OCSP deployment in the web PKI, see <xref target="Chung18"/>.</li>
          <li>The TLS Certificate Status Request extension (<xref section="8" sectionFormat="of" target="RFC6066"/>), commonly called "OCSP stapling", resolves the operational issues with OCSP. However, it is still ineffective in the presence of an active on-path attacker because the attacker can simply ignore the client's request for a stapled OCSP response.</li>
          <li>
            <xref target="RFC7633"/> defines a certificate extension that indicates that clients must expect stapled OCSP responses for the certificate and must abort the handshake ("hard-fail") if such a response is not available.</li>
          <li>OCSP stapling as used in TLS 1.2 does not extend to intermediate certificates within a certificate chain. The Multiple Certificate Status extension <xref target="RFC6961"/> addresses this shortcoming, but it has seen little deployment and had been deprecated by <xref target="RFC8446"/>. As a result, although this extension was recommended for TLS 1.2 in <xref target="RFC7525"/>, it is no longer recommended by this document.</li>
          <li>TLS 1.3 (<xref section="4.4.2.1" sectionFormat="of" target="RFC8446"/>) allows the association of OCSP information with intermediate certificates by using an extension to the CertificateEntry structure. However, using this facility remains impractical because many certification authorities (CAs) either do not publish OCSP for CA certificates or publish OCSP reports with a lifetime that is too long to be useful.</li>
          <li>Both CRLs and OCSP depend on relatively reliable connectivity to the Internet, which might not be available to certain kinds of nodes. A common example is newly provisioned devices that need to establish a secure connection in order to boot up for the first time.</li>
        </ul>
        <t>For the common use cases of public key certificates in TLS, servers <bcp14>SHOULD</bcp14> support the following as a best practice given the current state of the art and as a foundation for a possible future solution: OCSP <xref target="RFC6960"/> and OCSP stapling using the <tt>status_request</tt> extension defined in <xref target="RFC6066"/>. Note that the exact mechanism for embedding the <tt>status_request</tt> extension differs between TLS 1.2 and 1.3. As a matter of local policy, server operators <bcp14>MAY</bcp14> request that CAs issue must-staple <xref target="RFC7633"/> certificates for the server and/or for client authentication, but we recommend reviewing the operational conditions before deciding on this approach.</t>
        <t>The considerations in this section do not apply to scenarios where the DNS-Based
              Authentication of Named Entities (DANE) TLSA resource record <xref target="RFC6698"/> is used to signal to a client which certificate a server considers valid and good to use for TLS connections.</t>
      </section>
    </section>

  </middle>
  <back>

    <displayreference target="I-D.ietf-tls-esni" to="TLS-ECH"/>
    <displayreference target="I-D.ietf-uta-tls13-iot-profile" to="IOT-PROFILE"/>
    <displayreference target="I-D.irtf-cfrg-aead-limits" to="AEAD-LIMITS"/>
    <displayreference target="I-D.mattsson-cfrg-det-sigs-with-noise" to="CFRG-DET-SIGS"/>

    
    <references>
      <name>References</name>
<references>
        <name>Normative References</name>


	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.2119.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.3766.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.5246.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.5288.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.5746.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6066.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6125.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6176.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6347.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6979.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7301.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7366.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7465.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7627.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7748.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8174.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8422.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8446.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8996.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9147.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9155.xml"/>

	  </references>
      <references>
        <name>Informative References</name>

	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.2026.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.2246.xml"/>
        <xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.3261.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.3602.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.4346.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.4347.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.4949.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.5077.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.5116.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.5280.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.5321.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6101.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6120.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6698.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6797.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6960.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.6961.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7228.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7507.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7525.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7590.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7435.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7457.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7633.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7672.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7673.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7568.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9110.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9112.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9113.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7712.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7919.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7924.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.7925.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8452.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8461.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8470.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.8879.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9000.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9001.xml"/>
	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9051.xml"/>
 	<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9162.xml"/>

<!-- Note: RFC 9191 library has wrong name for J. Preuß Mattsson. Long way used instead.
<xi:include href="https://www.rfc-editor.org/refs/bibxml/reference.RFC.9191.xml"/>
-->
 <reference anchor="RFC9191" target="https://www.rfc-editor.org/info/rfc9191">
          <front>
            <title>Handling Large Certificates and Long Certificate Chains in TLS-Based EAP Methods</title>
            <author fullname="Mohit Sethi" initials="M." surname="Sethi">
              <organization/>
            </author>
            <author fullname="John Preuß Mattsson" initials="J." surname="Preuß Mattsson">
              <organization/>
            </author>
            <author fullname="Sean Turner" initials="S." surname="Turner">
              <organization/>
            </author>
            <date month="February" year="2022"/>
          </front>
          <seriesInfo name="RFC" value="9191"/>
          <seriesInfo name="DOI" value="10.17487/RFC9191"/>
        </reference>

	
	<reference anchor="TWIRL" target="https://cs.tau.ac.il/~tromer/papers/twirl.pdf">
          <front>
            <title>Factoring Large Numbers with the TWIRL Device</title>
            <author initials="A." surname="Shamir" fullname="Adi Shamir">
              <organization/>
            </author>
            <author initials="E." surname="Tromer" fullname="Eran Tromer">
              <organization/>
            </author>
            <date year="2004"/>
          </front>
	  <seriesInfo name="DOI" value="10.1007/978-3-540-45146-4_1"/>
          <refcontent>2014 IEEE Symposium on Security and Privacy</refcontent>
        </reference>


<reference anchor="Chung18">
          <front>
            <title>Is the Web Ready for OCSP Must-Staple?</title>
            <author fullname="Taejoong Chung" initials="T." surname="Chung">
              <organization>Rochester Institute of Technology and Northeastern University</organization>
            </author>
            <author fullname="Jay Lok" initials="J." surname="Lok">
              <organization>Northeastern University</organization>
            </author>
            <author fullname="Balakrishnan Chandrasekaran" initials="B." surname="Chandrasekaran">
              <organization>Max Planck Institute for Informatics</organization>
            </author>
            <author fullname="David Choffnes" initials="D." surname="Choffnes">
              <organization>Northeastern University</organization>
            </author>
            <author fullname="Dave Levin" initials="D." surname="Levin">
              <organization>University of Maryland</organization>
            </author>
            <author fullname="Bruce M. Maggs" initials="B." surname="Maggs">
              <organization>Duke University and Akamai Technologies</organization>
            </author>
            <author fullname="Alan Mislove" initials="A." surname="Mislove">
              <organization>Northeastern University</organization>
            </author>
            <author fullname="John Rula" initials="J." surname="Rula">
              <organization>Akamai Technologies</organization>
            </author>
            <author fullname="Nick Sullivan" initials="N." surname="Sullivan">
              <organization>Cloudflare</organization>
            </author>
            <author fullname="Christo Wilson" initials="C." surname="Wilson">
              <organization>Northeastern University</organization>
            </author>
            <date month="October" year="2018"/>
          </front>
          <seriesInfo name="DOI" value="10.1145/3278532.3278543"/>
	  <refcontent>Proceedings of the Internet Measurement Conference 2018</refcontent>
        </reference>

        <reference anchor="CRLite">
          <front>
            <title>CRLite: A Scalable System for Pushing All TLS Revocations to All Browsers</title>
            <author fullname="James Larisch" initials="J." surname="Larisch">
              <organization/>
            </author>
            <author fullname="David Choffnes" initials="D." surname="Choffnes">
              <organization/>
            </author>
            <author fullname="Dave Levin" initials="D." surname="Levin">
              <organization/>
            </author>
            <author fullname="Bruce M. Maggs" initials="B." surname="Maggs">
              <organization/>
            </author>
            <author fullname="Alan Mislove" initials="A." surname="Mislove">
              <organization/>
            </author>
            <author fullname="Christo Wilson" initials="C." surname="Wilson">
              <organization/>
            </author>
            <date month="May" year="2017"/>
          </front>
          <refcontent>2017 IEEE Symposium on Security and Privacy (SP)</refcontent>
          <seriesInfo name="DOI" value="10.1109/sp.2017.17"/>
        </reference>

	<reference anchor="LetsRevoke">
          <front>
            <title>Let's Revoke: Scalable Global Certificate Revocation</title>
            <author fullname="Trevor Smith" initials="T." surname="Smith">
              <organization/>
            </author>
            <author fullname="Luke Dickinson" initials="L." surname="Dickinson">
              <organization/>
            </author>
            <author fullname="Kent Seamons" initials="K." surname="Seamons">
              <organization/>
            </author>
            <date month="February" year="2020"/>
          </front>
          <refcontent>Proceedings 2020 Network and Distributed System Security Symposium</refcontent>
          <seriesInfo name="DOI" value="10.14722/ndss.2020.24084"/>
        </reference>

	<reference anchor="DegabrieleP07">
          <front>
            <title>Attacking the IPsec Standards in Encryption-only Configurations</title>
            <author fullname="Jean Paul Degabriele" initials="J." surname="Degabriele">
              <organization/>
            </author>
            <author fullname="Kenneth G. Paterson" initials="K." surname="Paterson">
              <organization/>
            </author>
            <date month="May" year="2007"/>
          </front>
          <refcontent>2007 IEEE Symposium on Security and Privacy (SP '07)</refcontent>
          <seriesInfo name="DOI" value="10.1109/sp.2007.8"/>
        </reference>

	<reference anchor="Triple-Handshake">
          <front>
            <title>Triple Handshakes and Cookie Cutters: Breaking and Fixing Authentication over TLS</title>
            <author fullname="Karthikeyan Bhargavan" initials="K." surname="Bhargavan">
              <organization/>
            </author>
            <author fullname="Antoine Delignat Lavaud" initials="A." surname="Lavaud">
              <organization/>
            </author>
            <author fullname="Cedric Fournet" initials="C." surname="Fournet">
              <organization/>
            </author>
            <author fullname="Alfredo Pironti" initials="A." surname="Pironti">
              <organization/>
            </author>
            <author fullname="Pierre Yves Strub" initials="P." surname="Strub">
              <organization/>
            </author>
            <date month="May" year="2014"/>
          </front>
          <refcontent>2014 IEEE Symposium on Security and Privacy</refcontent>
          <seriesInfo name="DOI" value="10.1109/sp.2014.14"/>
        </reference>

	<reference anchor="Soghoian2011">
          <front>
            <title>Certified Lies: Detecting and Defeating Government Interception Attacks Against SSL</title>
            <author fullname="Christopher Soghoian" initials="C." surname="Soghoian">
              <organization/>
            </author>
            <author fullname="Sid Stamm" initials="S." surname="Stamm">
              <organization/>
            </author>
            <date month="April" year="2010"/>
          </front>
          <refcontent>SSRN Electronic Journal</refcontent>
          <seriesInfo name="DOI" value="10.2139/ssrn.1591033"/>
	</reference>

	<reference anchor="Logjam">
          <front>
            <title>Imperfect Forward Secrecy: How Diffie-Hellman Fails in Practice</title>
            <author fullname="David Adrian" initials="D." surname="Adrian">
              <organization>University of Michigan, Ann Arbor, MI, USA</organization>
            </author>
            <author fullname="Karthikeyan Bhargavan" initials="K." surname="Bhargavan">
              <organization>INRIA Paris-Rocquencourt, Paris, France</organization>
            </author>
            <author fullname="Zakir Durumeric" initials="Z." surname="Durumeric">
              <organization>University of Michigan, Ann Arbor, MI, USA</organization>
            </author>
            <author fullname="Pierrick Gaudry" initials="P." surname="Gaudry">
              <organization>INRIA Nancy-Grand Est, CNRS and Université de Lorraine, Nancy, France</organization>
            </author>
            <author fullname="Matthew Green" initials="M." surname="Green">
              <organization>Johns Hopkins University, Baltimore, MD, USA</organization>
            </author>
            <author fullname="J. Alex Halderman" initials="J." surname="Halderman">
              <organization>University of Michigan, Ann Arbor, MI, USA</organization>
            </author>
            <author fullname="Nadia Heninger" initials="N." surname="Heninger">
              <organization>University of Pennsylvania, Philadelphia, PA, USA</organization>
            </author>
            <author fullname="Drew Springall" initials="D." surname="Springall">
              <organization>University of Michigan, Ann Arbor, MI, USA</organization>
            </author>
            <author fullname="Emmanuel Thomé" initials="E." surname="Thomé">
              <organization>INRIA Nancy-Grand Est, CNRS and Université de Lorraine, Nancy, France</organization>
            </author>
            <author fullname="Luke Valenta" initials="L." surname="Valenta">
              <organization>University of Pennsylvania, Philadelphia, PA, USA</organization>
            </author>
            <author fullname="Benjamin VanderSloot" initials="B." surname="VanderSloot">
              <organization>University of Michigan, Ann Arbor, MI, USA</organization>
            </author>
            <author fullname="Eric Wustrow" initials="E." surname="Wustrow">
              <organization>University of Michigan, Ann Arbor, MI, USA</organization>
            </author>
            <author fullname="Santiago Zanella-Béguelin" initials="S." surname="Zanella-Béguelin">
              <organization>Microsoft Research, Cambridge, United Kingdom</organization>
            </author>
            <author fullname="Paul Zimmermann" initials="P." surname="Zimmermann">
              <organization>INRIA Nancy-Grand Est, CNRS and Université de Lorraine, Nancy, France</organization>
            </author>
            <date month="October" year="2015"/>
          </front>
          <refcontent>Proceedings of the 22nd ACM SIGSAC Conference on Computer and Communications Security, pp. 5-17</refcontent>
          <seriesInfo name="DOI" value="10.1145/2810103.2813707"/>
        </reference>

	
        <reference anchor="POODLE" target="https://www.us-cert.gov/ncas/alerts/TA14-290A">
          <front>
            <title>SSL 3.0 Protocol Vulnerability and POODLE Attack</title>
            <author>
              <organization>US-CERT</organization>
            </author>
            <date year="2014" month="October"/>
          </front>
        </reference>
	
        <reference anchor="CAB-Baseline" target="https://cabforum.org/documents/">
          <front>
            <title>Baseline Requirements for the Issuance and Management of Publicly-Trusted Certificates</title>
            <author>
              <organization>CA/Browser Forum</organization>
            </author>
            <date month="April" year="2022"/>
          </front>
	    <seriesInfo name="Version" value="1.8.4"/>
        </reference>

        <reference anchor="Heninger2012">
          <front>
            <title>Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices</title>
            <author initials="N." surname="Heninger" fullname="Nadia Heninger">
              <organization/>
            </author>
            <author initials="Z." surname="Durumeric" fullname="Zakir Durumeric">
              <organization/>
            </author>
            <author initials="E." surname="Wustrow" fullname="Eric Wustrow">
              <organization/>
            </author>
            <author initials="J. A." surname="Halderman" fullname="J. Alex Halderman">
              <organization/>
            </author>
            <date year="2012" month="August"/>
          </front>
          <refcontent>21st Usenix Security Symposium</refcontent>
        </reference>

        <reference anchor="Sy2018">
          <front>
            <title>Tracking Users across the Web via TLS Session Resumption</title>
            <author fullname="Erik Sy" initials="E." surname="Sy">
              <organization>University of Hamburg</organization>
            </author>
            <author fullname="Christian Burkert" initials="C." surname="Burkert">
              <organization>University of Hamburg</organization>
            </author>
            <author fullname="Hannes Federrath" initials="H." surname="Federrath">
              <organization>University of Hamburg</organization>
            </author>
            <author fullname="Mathias Fischer" initials="M." surname="Fischer">
              <organization>University of Hamburg</organization>
            </author>
            <date month="December" year="2018"/>
          </front>
          <refcontent>Proceedings of the 34th Annual Computer Security Applications Conference, pp. 289-299</refcontent>
          <seriesInfo name="DOI" value="10.1145/3274694.3274708"/>
        </reference>


        <reference anchor="PatersonRS11">
          <front>
            <title>Tag Size Does Matter: Attacks and Proofs for the TLS Record Protocol</title>
            <author fullname="Kenneth G. Paterson" initials="K." surname="Paterson">
              <organization/>
            </author>
            <author fullname="Thomas Ristenpart" initials="T." surname="Ristenpart">
              <organization/>
            </author>
            <author fullname="Thomas Shrimpton" initials="T." surname="Shrimpton">
              <organization/>
            </author>
            <date month="December" year="2011" />
          </front>
          <refcontent>Proceedings of the 17th International conference on The Theory and Application of Cryptology and Information Security, pp. 372-389</refcontent>
          <seriesInfo name="DOI" value="10.1007/978-3-642-25385-0_20"/>
        </reference>


        <reference anchor="Kleinjung2010">
          <front>
            <title>Factorization of a 768-Bit RSA Modulus</title>
            <author fullname="Thorsten Kleinjung" initials="T." surname="Kleinjung">
              <organization/>
            </author>
            <author fullname="Kazumaro Aoki" initials="K." surname="Aoki">
              <organization/>
            </author>
            <author fullname="Jens Franke" initials="J." surname="Franke">
              <organization/>
            </author>
            <author fullname="Arjen K. Lenstra" initials="A." surname="Lenstra">
              <organization/>
            </author>
            <author fullname="Emmanuel Thomé" initials="E." surname="Thomé">
              <organization/>
            </author>
            <author fullname="Joppe W. Bos" initials="J." surname="Bos">
              <organization/>
            </author>
            <author fullname="Pierrick Gaudry" initials="P." surname="Gaudry">
              <organization/>
            </author>
            <author fullname="Alexander Kruppa" initials="A." surname="Kruppa">
              <organization/>
            </author>
            <author fullname="Peter L. Montgomery" initials="P." surname="Montgomery">
              <organization/>
            </author>
            <author fullname="Dag Arne Osvik" initials="D." surname="Osvik">
              <organization/>
            </author>
            <author fullname="Herman te Riele" initials="H." surname="te Riele">
              <organization/>
            </author>
            <author fullname="Andrey Timofeev" initials="A." surname="Timofeev">
              <organization/>
            </author>
            <author fullname="Paul Zimmermann" initials="P." surname="Zimmermann">
              <organization/>
            </author>
            <date year="2010"/>
          </front>
          <refcontent>Advances in Cryptology - CRYPTO 2010, pp. 333-350</refcontent>
          <seriesInfo name="DOI" value="10.1007/978-3-642-14623-7_18"/>
        </reference>

        <reference anchor="IANA_TLS" target="https://www.iana.org/assignments/tls-parameters">
          <front>
            <title>Transport Layer Security (TLS) Parameters</title>
            <author>
              <organization abbrev="IANA">Internet Assigned Numbers Authority</organization>
            </author>
          </front>
        </reference>

        <reference anchor="Multiple-Encryption">
          <front>
            <title>On the security of multiple encryption</title>
            <author fullname="Ralph C. Merkle" initials="R." surname="Merkle">
              <organization>Elxsi, Int., Sunnyvale, CA</organization>
            </author>
            <author fullname="Martin E. Hellman" initials="M." surname="Hellman">
              <organization>Stanford Univ., Stanford, CA</organization>
            </author>
            <date month="July" year="1981"/>
          </front>
          <refcontent>Communications of the ACM, Vol. 24, Issue 7, pp. 465-467</refcontent>
          <seriesInfo name="DOI" value="10.1145/358699.358718"/>
        </reference>

<reference anchor="NIST.SP.800-56A">
<front>
<title>
Recommendation for Pair-Wise Key-Establishment Schemes Using Discrete Logarithm Cryptography
</title>
<author>
<organization>National Institute of Standards and Technology</organization>
</author>
<date month="April" year="2018"/>
</front>
<refcontent>Revision 3</refcontent>
<seriesInfo name="NIST Special Publication" value="800-56A"/>
<seriesInfo name="DOI" value="10.6028/NIST.SP.800-56Ar3"/>
</reference>

	
        <reference anchor="Springall16">
          <front>
            <title>Measuring the Security Harm of TLS Crypto Shortcuts</title>
            <author fullname="Drew Springall" initials="D." surname="Springall">
              <organization>University of Michigan, Ann Arbor, MI, USA</organization>
            </author>
            <author fullname="Zakir Durumeric" initials="Z." surname="Durumeric">
              <organization>University of Michigan, Ann Arbor, MI, USA</organization>
            </author>
            <author fullname="J. Alex Halderman" initials="J." surname="Halderman">
              <organization>University of Michigan, Ann Arbor, MI, USA</organization>
            </author>
            <date month="November" year="2016"/>
          </front>
          <refcontent>Proceedings of the 2016 Internet Measurement Conference, pp. 33-47</refcontent>
          <seriesInfo name="DOI" value="10.1145/2987443.2987480"/>
        </reference>

<reference anchor="Boeck2016" target="https://eprint.iacr.org/2016/475.pdf">
          <front>
            <title>Nonce-Disrespecting Adversaries: Practical Forgery Attacks on GCM in TLS</title>
            <author initials="H." surname="Böck" fullname="Hanno Böck">
              <organization/>
            </author>
            <author initials="A." surname="Zauner" fullname="Aaron Zauner">
              <organization/>
            </author>
            <author initials="S." surname="Devlin" fullname="Sean Devlin">
              <organization/>
            </author>
            <author initials="J." surname="Somorovsky" fullname="Juraj Somorovsky">
              <organization/>
            </author>
            <author initials="P." surname="Jovanovic" fullname="Philipp Jovanovic">
              <organization/>
            </author>
            <date year="2016" month="May"/>
          </front>
        </reference>

	<reference anchor="Joux2006" target="https://csrc.nist.gov/csrc/media/projects/block-cipher-techniques/documents/bcm/comments/800-38-series-drafts/gcm/joux_comments.pdf">
          <front>
            <title>Authentication Failures in NIST version of GCM</title>
            <author initials="A." surname="Joux" fullname="Antoine Joux">
              <organization/>
            </author>
            <date year="2006"/>
          </front>
        </reference>

        <reference anchor="CVE" target="https://cve.mitre.org">
          <front>
            <title>Common Vulnerabilities and Exposures</title>
            <author>
              <organization>MITRE</organization>
            </author>
            <date/>
          </front>
        </reference>

        <reference anchor="ALPACA" target="https://www.usenix.org/conference/usenixsecurity21/presentation/brinkmann">
          <front>
            <title>ALPACA: Application Layer Protocol Confusion - Analyzing and Mitigating Cracks in TLS Authentication</title>
            <author initials="M." surname="Brinkmann" fullname="Marcus Brinkmann">
              <organization/>
            </author>
            <author initials="C." surname="Dresen" fullname="Christian Dresen">
              <organization/>
            </author>
            <author initials="R." surname="Merget" fullname="Robert Merget">
              <organization/>
            </author>
            <author initials="D." surname="Poddebniak" fullname="Damian Poddebniak">
              <organization/>
            </author>
            <author initials="J." surname="Müller" fullname="Jens Müller">
              <organization/>
            </author>
            <author initials="J." surname="Somorovsky" fullname="Juraj Somorovsky">
              <organization/>
            </author>
            <author initials="J." surname="Schwenk" fullname="Jörg Schwenk">
              <organization/>
            </author>
            <author initials="S." surname="Schinzel" fullname="Sebastian Schinzel">
              <organization/>
            </author>
            <date month="August" year="2021"/>
          </front>
          <refcontent>30th USENIX Security Symposium (USENIX Security 21)</refcontent>
        </reference>

        <reference anchor="DROWN" target="https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/aviram">
          <front>
            <title>DROWN: Breaking TLS using SSLv2</title>
            <author initials="N." surname="Aviram" fullname="Nimrod Aviram">
              <organization/>
            </author>
            <author initials="S." surname="Schinzel" fullname="Sebastian Schinzel">
              <organization/>
            </author>
            <author initials="J." surname="Somorovsky" fullname="Juraj Somorovsky">
              <organization/>
            </author>
            <author initials="N." surname="Heninger" fullname="Nadia Heninger">
              <organization/>
            </author>
            <author initials="M." surname="Dankel" fullname="Maik Dankel">
              <organization/>
            </author>
            <author initials="J." surname="Steube" fullname="Jens Steube">
              <organization/>
            </author>
            <author initials="L." surname="Valenta" fullname="Luke Valenta">
              <organization/>
            </author>
            <author initials="D." surname="Adrian" fullname="David Adrian">
              <organization/>
            </author>
            <author initials="J." surname="Halderman" fullname="J. Alex Halderman">
              <organization/>
            </author>
            <author initials="V." surname="Dukhovni" fullname="Viktor Dukhovni">
              <organization/>
            </author>
            <author initials="E." surname="Käsper" fullname="Emilia Käsper">
              <organization/>
            </author>
            <author initials="S." surname="Cohney" fullname="Shaanan Cohney">
              <organization/>
            </author>
            <author initials="S." surname="Engels" fullname="Susanne Engels">
              <organization/>
            </author>
            <author initials="C." surname="Paar" fullname="Christof Paar">
              <organization/>
            </author>
            <author initials="Y." surname="Shavitt" fullname="Yuval Shavitt">
              <organization/>
            </author>
            <date month="August" year="2016"/>
          </front>
          <refcontent>25th USENIX Security Symposium (USENIX Security 16)</refcontent>
        </reference>

        <reference anchor="RACCOON" target="https://www.usenix.org/conference/usenixsecurity21/presentation/merget">
          <front>
            <title>Raccoon Attack: Finding and Exploiting Most-Significant-Bit-Oracles in TLS-DH(E)</title>
            <author initials="R." surname="Merget" fullname="Robert Merget">
              <organization/>
            </author>
            <author initials="M." surname="Brinkmann" fullname="Marcus Brinkmann">
              <organization/>
            </author>
            <author initials="N." surname="Aviram" fullname="Nimrod Aviram">
              <organization/>
            </author>
            <author initials="J." surname="Somorovsky" fullname="Juraj Somorovsky">
              <organization/>
            </author>
            <author initials="J." surname="Mittmann" fullname="Johannes Mittmann">
              <organization/>
            </author>
            <author initials="J." surname="Schwenk" fullname="Jörg Schwenk">
              <organization/>
            </author>
            <date year="2021"/>
          </front>
          <refcontent>30th USENIX Security Symposium (USENIX Security 21)</refcontent>
        </reference>

        <reference anchor="Antipa2003" target="https://doi.org/10.1007/3-540-36288-6_16">
          <front>
            <title>Validation of Elliptic Curve Public Keys</title>
            <author initials="A." surname="Antipa" fullname="Adrian Antipa">
              <organization/>
            </author>
            <author initials="D. R. L." surname="Brown" fullname="Daniel R. L. Brown">
              <organization/>
            </author>
            <author initials="A." surname="Menezes" fullname="Alfred Menezes">
              <organization/>
            </author>
            <author initials="R." surname="Struik" fullname="Rene Struik">
              <organization/>
            </author>
            <author initials="S." surname="Vanstone" fullname="Scott Vanstone">
              <organization/>
            </author>
            <date month="December" year="2003"/>
          </front>
          <refcontent>Public Key Cryptography - PKC 2003</refcontent>
        </reference>

        <reference anchor="Jager2015">
          <front>
            <title>Practical Invalid Curve Attacks on TLS-ECDH</title>
            <author fullname="Tibor Jager" initials="T." surname="Jager">
              <organization/>
            </author>
            <author fullname="Jörg Schwenk" initials="J." surname="Schwenk">
              <organization/>
            </author>
            <author fullname="Juraj Somorovsky" initials="J." surname="Somorovsky">
              <organization/>
            </author>
            <date year="2015"/>
          </front>
          <refcontent>Computer Security -- ESORICS 2015, pp. 407-425</refcontent>
          <seriesInfo name="DOI" value="10.1007/978-3-319-24174-6_21"/>
        </reference>

        <reference anchor="SAFECURVES" target="https://safecurves.cr.yp.to">
          <front>
            <title>SafeCurves: choosing safe curves for elliptic-curve cryptography</title>
            <author initials="D. J." surname="Bernstein" fullname="Daniel J. Bernstein">
              <organization/>
            </author>
            <author initials="T." surname="Lange" fullname="Tanja Lange">
              <organization/>
            </author>
            <date year="2014" month="December"/>
          </front>
        </reference>

	
	<reference anchor="Poddebniak2017" target="https://eprint.iacr.org/2017/1014.pdf">
          <front>
            <title>Attacking Deterministic Signature Schemes using Fault Attacks</title>
            <author initials="D." surname="Poddebniak" fullname="Damian Poddebniak">
              <organization/>
            </author>
            <author initials="J." surname="Somorovsky" fullname="Juraj Somorovsky">
              <organization/>
            </author>
            <author initials="S." surname="Schinzel" fullname="Sebastian Schinzel">
              <organization/>
            </author>
            <author initials="M." surname="Lochter" fullname="Manfred Lochter">
              <organization/>
            </author>
            <author initials="P." surname="Rösler" fullname="Paul Rösler">
              <organization/>
            </author>
            <date month="April" year="2018"/>
          </front>
	  <refcontent>Conference: 2018 IEEE European Symposium on Security and Privacy</refcontent>
	   <seriesInfo name="DOI" value="10.1109/EuroSP.2018.00031"/>
        </reference>

	
        <reference anchor="Kim2014" target="https://users.ece.cmu.edu/~yoonguk/papers/kim-isca14.pdf">
          <front>
            <title>Flipping Bits in Memory Without Accessing Them: An Experimental Study of DRAM Disturbance Errors</title>
            <author initials="Y." surname="Kim" fullname="Yoongu Kim">
              <organization/>
            </author>
            <author initials="R." surname="Daly" fullname="Ross Daly">
              <organization/>
            </author>
            <author initials="J." surname="Kim" fullname="Jeremie Kim">
              <organization/>
            </author>
            <author initials="C." surname="Fallin" fullname="Chris Fallin">
              <organization/>
            </author>
            <author initials="J. H." surname="Lee" fullname="Ji Jye Lee">
              <organization/>
            </author>
            <author initials="D." surname="Lee" fullname="Donghyuk Lee">
              <organization/>
            </author>
            <author initials="C." surname="Wilkerson" fullname="Chris Wilkerson">
              <organization/>
            </author>
            <author initials="K." surname="Lai" fullname="Konrad Lai">
              <organization/>
            </author>
            <author initials="O." surname="Mutlu" fullname="Onur Mutlu">
              <organization/>
            </author>
            <date month="July" year="2014"/>
          </front>
	   <seriesInfo name="DOI" value="10.1109/ISCA.2014.6853210"/>
     </reference>

        <referencegroup anchor="STD53" target="https://www.rfc-editor.org/info/std53">
          <reference anchor="RFC1939" target="https://www.rfc-editor.org/info/rfc1939">
            <front>
              <title>Post Office Protocol - Version 3</title>
              <author fullname="J. Myers" initials="J" surname="Myers"/>
              <author fullname="M. Rose" initials="M" surname="Rose"/>
              <date month="May" year="1996"/>  
            </front>
            <seriesInfo name="STD" value="53"/>
            <seriesInfo name="RFC" value="1939"/>
            <seriesInfo name="DOI" value="10.17487/RFC1939"/>
          </reference>
        </referencegroup>


<!--draft-ietf-tls-esni-15; I-D exists as of 11/15/22-->
<xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.draft-ietf-tls-esni.xml"/>	



<!--[rfced] FYI: draft-mattsson-cfrg-det-sigs-with-noise-04 was
replaced by draft-irtf-cfrg-det-sigs-with-noise-00, so we updated 
the entry for [CFRG-DET-SIGS] accordingly.

Original:
   [I-D.mattsson-cfrg-det-sigs-with-noise]
              Mattsson, J. P., Thormarker, E., and S. Ruohomaa,
              "Deterministic ECDSA and EdDSA Signatures with Additional
              Randomness", Work in Progress, Internet-Draft, draft-
              mattsson-cfrg-det-sigs-with-noise-04, 15 February 2022,
              <https://www.ietf.org/archive/id/draft-mattsson-cfrg-det-
              sigs-with-noise-04.txt>.

Updated:
   [CFRG-DET-SIGS]
              Preuß Mattsson, J., Thormarker, E., and S. Ruohomaa,
              "Deterministic ECDSA and EdDSA Signatures with Additional
              Randomness", Work in Progress, Internet-Draft, draft-irtf-
              cfrg-det-sigs-with-noise-00, 8 August 2022,
              <https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-
              det-sigs-with-noise-00>.
-->
<!-- draft-mattsson-cfrg-det-sigs-with-noise-04 replaced by draft-irtf-cfrg-det-sigs-with-noise-00; I-D exists as of 11/15/22. Long way used to correctly display "John Preuß Mattsson"
-->
<reference anchor="I-D.mattsson-cfrg-det-sigs-with-noise">
<front>
<title>
Deterministic ECDSA and EdDSA Signatures with Additional Randomness
</title>
<author initials="J" surname="Preuß Mattsson" fullname="John Preuß Mattsson">
</author>
<author initials="E" surname="Thormarker" fullname="Erik Thormarker">
</author>
<author initials="S" surname="Ruohomaa" fullname="Sini Ruohomaa">
</author>
<date month="August" day="8" year="2022"/>
</front>
<seriesInfo name="Internet-Draft" value="draft-irtf-cfrg-det-sigs-with-noise-00"/>
</reference>

<!--draft-irtf-cfrg-aead-limits-05; I-D exists as of 11/15/22-->	
<xi:include                                                                                         href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.draft-irtf-cfrg-aead-limits.xml"/>

<!--draft-ietf-uta-tls13-iot-profile-05; I-D exists as of 11/15/22-->
<xi:include href="https://datatracker.ietf.org/doc/bibxml3/reference.I-D.draft-ietf-uta-tls13-iot-profile.xml"/>	
</references>
    </references>
    <section anchor="diff-rfc">
      <name>Differences from RFC 7525</name>
      <t>This revision of the Best Current Practices contains numerous changes, and this section is focused
on the normative changes.</t>
      <ul spacing="normal">
        <li>
          <t>High-level differences:
          </t>
          <ul spacing="normal">
            <li>Described the expectations from new TLS-incorporating transport protocols and from new application protocols layered on TLS.</li>
            <li>Clarified items (e.g., renegotiation) that only apply to TLS 1.2.</li>
            <li>Changed the status of TLS 1.0 and 1.1 from "<bcp14>SHOULD NOT</bcp14>" to "<bcp14>MUST NOT</bcp14>".</li>
            <li>Added TLS 1.3 at a "<bcp14>SHOULD</bcp14>" level.</li>
            <li>Made similar changes to DTLS.</li>
            <li>Included specific guidance for multiplexed protocols.</li>
            <li>
              <bcp14>MUST</bcp14>-level implementation requirement for ALPN and more specific <bcp14>SHOULD</bcp14>-level guidance for ALPN and SNI.</li>
            <li>Clarified discussion of strict TLS policies, including <bcp14>MUST</bcp14>-level recommendations.</li>
            <li>Limits on key usage.</li>
            <li>New attacks since <xref target="RFC7457"/>: ALPACA, Raccoon, Logjam, and "Nonce-Disrespecting Adversaries".</li>
            <li>RFC 6961 (OCSP status_request_v2) has been deprecated.</li>
            <li>
              <bcp14>MUST</bcp14>-level requirement for server-side RSA certificates to have a 2048-bit modulus at a minimum, replacing a "<bcp14>SHOULD</bcp14>".</li>
          </ul>
        </li>
        <li>
          <t>Differences specific to TLS 1.2:
          </t>
          <ul spacing="normal">
            <li>
              <bcp14>SHOULD</bcp14>-level guidance on AES-GCM nonce generation.</li>
            <li>
              <bcp14>SHOULD NOT</bcp14> use (static or ephemeral) finite-field DH key agreement.</li>
            <li>
              <bcp14>SHOULD NOT</bcp14> reuse ephemeral finite-field DH keys across multiple connections.</li>
            <li>
              <bcp14>SHOULD NOT</bcp14> use static Elliptic Curve DH key exchange.</li>
            <li>2048-bit DH is now a "<bcp14>MUST</bcp14>" and ECDH minimal curve size is 224 (vs. 192 previously).</li>
            <li>Support for <tt>extended_master_secret</tt> is now a "<bcp14>MUST</bcp14>" (previously it was a soft recommendation, as the RFC had not been published at the time). Also removed other, more complicated, related mitigations.</li>
            <li>
              <bcp14>MUST</bcp14>-level restriction on session ticket validity, replacing a "<bcp14>SHOULD</bcp14>".</li>
            <li>
              <bcp14>SHOULD</bcp14>-level restriction on the TLS session duration, depending on the rotation period of an <xref target="RFC5077"/> ticket key.</li>
            <li>Dropped TLS_DHE_RSA_WITH_AES from the recommended ciphers.</li>
            <li>Added TLS_ECDHE_ECDSA_WITH_AES to the recommended ciphers.</li>
            <li>
              <bcp14>SHOULD NOT</bcp14> use the old MTI cipher suite, TLS_RSA_WITH_AES_128_CBC_SHA.</li>
            <li>Recommended curve X25519 alongside NIST P-256.</li>
          </ul>
        </li>
        <li>
          <t>Differences specific to TLS 1.3:
          </t>
          <ul spacing="normal">
            <li>New TLS 1.3 capabilities: 0-RTT.</li>
            <li>Removed capabilities: renegotiation and compression.</li>
            <li>Added mention of TLS Encrypted Client Hello, but no recommendation for use until it is finalized.</li>
            <li>
              <bcp14>SHOULD</bcp14>-level requirement for forward secrecy in TLS 1.3 session resumption.</li>
            <li>Generic <bcp14>MUST</bcp14>-level guidance to avoid 0-RTT unless it is documented for the particular protocol.</li>
          </ul>
        </li>
      </ul>
    </section>


    <section numbered="false" anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>Thanks to
<contact fullname="Alexey Melnikov"/>,
<contact fullname="Alvaro Retana"/>,
<contact fullname="Andrei Popov"/>,
<contact fullname="Ben Kaduk"/>,
<contact fullname="Christian Huitema"/>,
<contact fullname="Corey Bonnell"/>,
<contact fullname="Cullen Jennings"/>,
<contact fullname="Daniel Kahn Gillmor"/>,
<contact fullname="David Benjamin"/>,
<contact fullname="Eric Rescorla"/>,
<contact fullname="Éric Vyncke"/>,
<contact fullname="Francesca Palombini"/>,
<contact fullname="Hannes Tschofenig"/>,
<contact fullname="Hubert Kario"/>,
<contact fullname="Ilari Liusvaara"/>,
<contact fullname="John Preuß Mattsson"/>,
<contact fullname="John R. Levine"/>,
<contact fullname="Julien Élie"/>,
<contact fullname="Lars Eggert"/>,
<contact fullname="Leif Johansson"/>,
<contact fullname="Magnus Westerlund"/>,
<contact fullname="Martin Duke"/>,
<contact fullname="Martin Thomson"/>,
<contact fullname="Mohit Sahni"/>,
<contact fullname="Nick Sullivan"/>,
<contact fullname="Nimrod Aviram"/>,
<contact fullname="Paul Wouters"/>,
<contact fullname="Peter Gutmann"/>,
<contact fullname="Rich Salz"/>,
<contact fullname="Robert Sayre"/>,
<contact fullname="Robert Wilton"/>,
<contact fullname="Roman Danyliw"/>,
<contact fullname="Ryan Sleevi"/>,
<contact fullname="Sean Turner"/>,
<contact fullname="Stephen Farrell"/>,
<contact fullname="Tim Evans"/>,
<contact fullname="Valery Smyslov"/>,
<contact fullname="Viktor Dukhovni"/>,
and <contact fullname="Warren Kumari"/>
for helpful comments and discussions that have shaped this document.</t>
      <t>The authors gratefully acknowledge the contribution of <contact fullname="Ralph Holz"/>, who was a coauthor of RFC 7525, the previous version of the TLS recommendations.</t>
      <t>See RFC 7525 for additional acknowledgments specific to the previous version of the TLS recommendations.</t>
    </section>
  </back>
</rfc>
